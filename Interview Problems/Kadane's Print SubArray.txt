public class KadanesAlgorithm {
    public static void main(String[] args) {
        int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
        findMaxSubarray(nums);
    }

    public static void findMaxSubarray(int[] nums) {
        // Initialize variables to track the starting and ending indices of the maximum sum subarray
        int start = 0, end = 0;
        int currStart = 0;
        // Initialize variables to track the current sum and the maximum sum
        int curr = nums[0];
        int max = nums[0];

        // Iterate through the array starting from index 1
        for (int i = 1; i < nums.length; i++) {
            // Determine whether to start a new subarray or extend the current one
            if (nums[i] > nums[i] + curr) {
                curr = nums[i];
                currStart = i;
            } else {
                curr = nums[i] + curr;
            }

            // Update the maximum sum and corresponding indices if a new maximum is found
            if (curr > max) {
                max = curr;
                start = currStart;
                end = i;
            }
        }

        // Print the elements of the maximum sum subarray
        System.out.print("Maximum Sum Subarray: ");
        for (int i = start; i <= end; i++) {
            System.out.print(nums[i] + " ");
        }

        System.out.println("\nMaximum Sum: " + max);
    }
}
