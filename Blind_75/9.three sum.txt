class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(nums);
        for(int i = 0; i < nums.length - 2; i++) {
           
           //skipping duplicates for the first element
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }

            int target = -nums[i]; //fixing the current element
            int left = i + 1;
            int right = nums.length - 1;
            
            
            while(left < right) {
            int sum = nums[left] + nums[right];
            if(sum == target) {
                list.add(Arrays.asList(nums[i],nums[left],nums[right]));
                //skipping the duplicate left elements
                while(left < right && nums[left] == nums[left + 1]) {
                    left++;
                }
                //skipping the duplicate right elements
                while(left < right && nums[right] == nums[right - 1]) {
                    right--;
                }
                left++;
                right--;
            }
             else if(sum < target) { //if sum is less than target increment left pointer
                 left++;
             } else {
                 right--; //if sum is greater than target decrement right pointer
             }
            }
        }
        return list;
    }
}